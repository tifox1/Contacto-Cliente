{"version":3,"sources":["Components/Templates/Caja.js","Components/Formulario/Components/Templates/CampoTexto.js","Components/Formulario/Components/Templates/Radio.js","Components/Formulario/Components/Templates/Autocompletado.js","Components/Formulario/Components/Formulario.js","Components/Navegacion.js","Components/Formulario/index.js","Components/Login.js","Components/Templates/CampoFecha.js","Components/Templates/Tabla.js","Components/Templates/ItemDesp.js","Components/ListaEnviados.js","App.js","reportWebVitals.js","index.js"],"names":["Caja","props","Grid","item","xs","component","Box","padding","Zoom","in","Paper","variant","container","spacing","direction","alignItems","title","Typography","children","CampoTexto","FormControl","fullWidth","TextField","label","multiline","name","value","onChange","RadioSeleccion","useState","other","setOther","useEffect","RadioGroup","error","options","map","option","FormControlLabel","control","Radio","indexOf","renderOther","Collapse","errorText","FormHelperText","otherName","otherValue","otherError","Autocompletado","Autocomplete","getOptionLabel","renderInput","params","Alert","elevation","Formulario","cookies","Cookies","message","setMessage","handleClose","event","reason","enviado","setEnviado","formik","useFormik","initialValues","clientes","tipoContacto","tipoCliente","motDejoComprar","cerrasteVenta","comproProducto","quienCompra","detProducto","muestra","comentarios","otherComproProducto","otherQuienCompra","onSubmit","resetForm","fetch","method","headers","body","JSON","stringify","salesman_name","get","usuario","company","contact","client_type","stop_selling","order","seller_name","product_details","sample","comment","id_cliente","closed_sells","competition","other_seller","other_competition","then","response","ok","console","log","validationSchema","Yup","required","when","is","isSubmitting","Object","keys","errors","length","document","getElementsByName","focus","handleSubmit","to","inputValue","values","disableClearable","onInputChange","newValue","setFieldValue","handleChange","Button","type","color","onClick","Snackbar","open","autoHideDuration","onClose","severity","useStyles","makeStyles","theme","root","flexGrow","background","Navegacion","classes","history","useHistory","marginBottom","AppBar","className","position","Toolbar","back","IconButton","Link","remove","push","endIcon","FormView","setClientes","json","data","divs","margin","Login","logged","setLogged","setOpen","backdrop","setBackdrop","contrasenia","status","set","path","catch","e","noWrap","Backdrop","style","zIndex","transitionDuration","enter","CircularProgress","md","justify","CampoFecha","utils","DateFnsUtils","DatePicker","inputVariant","format","Tabla","TableContainer","Table","TableHead","TableCell","colSpan","items","titulo","align","TableBody","ItemDesp","titulos","TableRow","cliente","fecha","paddingBottom","paddingTop","timeout","unmountOnExit","List","subheader","ListSubheader","id","respuestas","respuesta","ListItem","ListItemText","primary","secondary","ListaEnviados","setItems","desde","Date","hasta","res","setHours","fecha_min","toUTCString","fecha_max","resultado","forEach","icon","DateRangeIcon","disableFuture","date","Divider","createTheme","palette","red","App","ThemeProvider","CssBaseline","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.25385125.chunk.js","sourcesContent":["import { Box, Grid, Paper, Typography, Zoom } from '@material-ui/core'\nimport React from 'react'\n\nconst Caja = (props) => {\n    return(<>\n        <Grid item\n              xs={12} component={Box} padding={1}>\n            <Zoom in={true}>\n                <Paper variant=\"outlined\">\n                    <Grid container spacing={1} component={Box} padding={2}>\n                        <Grid container xs={12} direction=\"row\" alignItems=\"center\">\n                            {(() => {\n                                if (props.title) {\n                                    return(<>\n                                        <Typography variant=\"h6\">{\n                                            props.title\n                                        }</Typography>\n                                    </>)\n                                }\n                            })()}\n                        </Grid>\n                        <Grid item xs={12}>\n                            {props.children}\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Zoom>\n        </Grid>\n    </>)\n}\n\nexport default Caja","import { FormControl, TextField } from '@material-ui/core'\nimport React from 'react'\nimport Caja from '../../../Templates/Caja'\n\nconst CampoTexto = (props) => {\n    return(\n        <Caja title={props.title}>\n            <FormControl fullWidth>\n                <TextField\n                    label=\"Respuesta\"\n                    variant=\"outlined\"\n                    multiline={true}\n                    name={props.name}\n                    value={props.value}\n                    onChange={props.onChange}\n                />\n            </FormControl>\n        </Caja>\n    )\n}\n\nexport default CampoTexto","import {\n    FormControl,\n    FormControlLabel,\n    FormHelperText,\n    Grid,\n    Radio,\n    RadioGroup,\n    TextField\n} from '@material-ui/core'\nimport Collapse from '@material-ui/core/Collapse'\nimport React, { useEffect, useState } from 'react'\nimport Caja from '../../../Templates/Caja'\n\nconst RadioSeleccion = (props) => {\n    const [other, setOther] = useState(false)\n\n    useEffect(() => {\n        if (props.value === 'other'){\n            setOther(true)\n        } else {\n            setOther(false)\n        }\n    }, [props.value])\n\n    return(\n        <Caja title={props.title}>\n            <Grid container>\n                <Grid item xs={12}>\n                    <FormControl>\n                        <RadioGroup\n                            value={props.value}\n                            onChange={props.onChange}\n                            name={props.name}\n                            error={props.error}>\n                            {props.options.map(option => {\n                                    return(\n                                        <FormControlLabel\n                                            key={props.options.indexOf(option)}\n                                            value={option[0]}\n                                            control={<Radio />}\n                                            label={option[1]}/>\n                                    )\n                                })\n                            }\n                            {props.renderOther &&\n                                <FormControlLabel\n                                    value={\"other\"}\n                                    control={<Radio />}\n                                    label=\"Otro...\"/>\n                            }\n                        </RadioGroup>\n                        <Collapse in={props.errorText}>\n                            <FormHelperText error>{\n                                props.errorText\n                            }</FormHelperText>\n                        </Collapse>\n                    </FormControl>\n                </Grid>\n                <Grid item xs={12}>\n                    <Collapse in={other}>\n                        <FormControl fullWidth>\n                            <TextField\n                                label=\"Especificar\"\n                                variant=\"outlined\"\n                                name={props.otherName}\n                                value={props.otherValue}\n                                onChange={props.onChange}\n                                error={props.otherError}\n                            />\n                        </FormControl>\n                        <Collapse in={props.otherError}>\n                            <FormHelperText error>{\n                                props.otherError\n                            }</FormHelperText>\n                        </Collapse>\n                    </Collapse>\n                </Grid>\n            </Grid>\n        </Caja>\n    )\n}\n\nexport default RadioSeleccion","import { Collapse, FormControl, FormHelperText, TextField } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport Caja from '../../../Templates/Caja'\n\nconst Autocompletado = (props) => {\n    return(<>\n        <Caja title={props.title}>\n            <FormControl variant=\"outlined\" fullWidth>\n                <Autocomplete\n                    {...props}\n                    getOptionLabel={(option => option[0])}\n                    renderInput={(params) =>\n                        <TextField {...params}\n                            label={props.title}\n                            variant=\"outlined\"\n                        />\n                    }\n                />\n            </FormControl>\n            <Collapse in={props.error}>\n                <FormHelperText error>{props.error}</FormHelperText>\n            </Collapse>\n        </Caja>\n    </>)\n}\n\nexport default Autocompletado","import { Box, Button, Grid } from '@material-ui/core'\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { Redirect } from \"react-router-dom\";\nimport { useFormik } from 'formik'\nimport React, { useEffect, useState } from 'react'\nimport * as Yup from 'yup'\nimport CampoTexto from './Templates/CampoTexto'\nimport RadioSeleccion from './Templates/Radio'\nimport Autocompletado from './Templates/Autocompletado'\nimport Cookies from 'universal-cookie'\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst Formulario = (props) => {\n    const cookies = new Cookies()\n\n    const [message, setMessage] = useState(false)\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        setMessage(false)\n    }\n\n    const [enviado, setEnviado] = useState(false)\n\n\n    const formik = useFormik({\n        initialValues: {\n            clientes: '',\n            tipoContacto: '',\n            tipoCliente: '',\n            motDejoComprar: '',\n            cerrasteVenta: '',\n            comproProducto: '',\n            quienCompra: '',\n            detProducto: '',\n            muestra: '',\n            comentarios: '',\n            otherComproProducto: '',\n            otherQuienCompra: '',\n        },\n        onSubmit: (value, {resetForm}) => {\n            fetch('/api/formulario/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    salesman_name: cookies.get('usuario').usuario,\n                    company: cookies.get('usuario').company,\n                    contact: value.tipoContacto,\n                    client_type: value.tipoCliente,\n                    stop_selling: value.motDejoComprar,\n                    order: value.cerrasteVenta,\n                    seller_name: value.quienCompra,\n                    product_details: value.detProducto,\n                    sample: value.muestra,\n                    comment: value.comentarios,\n                    id_cliente: value.clientes,\n                    closed_sells: value.cerrasteVenta,\n                    competition: value.comproProducto,\n                    other_seller: value.otherQuienCompra,\n                    other_competition: value.otherComproProducto\n                })\n            }).then(response => {\n                if (response.ok) {\n                    console.log('enviado')\n                    resetForm()\n                    setEnviado(false)\n                    setMessage(true)\n                }\n            })\n        },\n        validationSchema: Yup.object({\n            clientes: Yup.string().required('Ingrese el cliente'),\n            tipoContacto: Yup.string().required('Ingrese medio de contacto'),\n            tipoCliente: Yup.string().required('Ingrese tipo de cliente'),\n            cerrasteVenta: Yup.string().required('Ingrese si cerró una venta'),\n            otherComproProducto: Yup.string().when('comproProducto', {\n                is: 'other',\n                then: Yup.string().required('Especifique otro producto')\n            }),\n            otherQuienCompra: Yup.string().when('quienCompra', {\n                is: 'other',\n                then: Yup.string().required('Especifique otro proveedor')\n            })\n        })\n    })\n\n    useEffect(() => {\n        if (!formik.isSubmitting) return\n        if (Object.keys(formik.errors).length > 0) {\n            document.getElementsByName(\n                Object.keys(formik.errors)[0]\n            )[0].focus()\n        }\n    }, [formik])\n\n    return (\n        <form onSubmit={formik.handleSubmit}>\n            {message ? <Redirect to=\"/\" /> : null}\n            <Grid container component={Box} padding={1}>\n                {/* <Seleccion title=\"Cliente\"\n                    options={props.clientes}\n                    name=\"clientes\"\n                    value={formik.values.clientes}\n                    onChange={formik.handleChange}\n                    error={formik.errors.clientes}\n                    errorText={formik.errors.clientes}\n                /> */}\n                <Autocompletado\n                    error={enviado && formik.errors.clientes}\n                    name=\"clientes\"\n                    options={props.clientes}\n                    title=\"Cliente\"\n                    inputValue={formik.values.clientes}\n                    disableClearable\n                    onInputChange={(event, newValue) =>{\n                        formik.setFieldValue('clientes', newValue)\n                    }}\n                    onChange={(event, newValue) => {\n                        formik.setFieldValue('clientes', newValue)\n                    }}\n                />\n                <RadioSeleccion title=\"¿Por qué medio contactaste?\"\n                    options={[\n                        ['Visita al Cliente', 'Visita al Cliente'],\n                        ['Whatsapp', 'Whatsapp'],\n                        ['Llamada', 'Llamada'],\n                        ['Correo Electronico', 'Correo Electronico'],\n                        ['Visito Segupak', 'Visito Segupak'],\n                    ]}\n                    name=\"tipoContacto\"\n                    value={formik.values.tipoContacto}\n                    onChange={formik.handleChange}\n                    error={enviado && formik.errors.tipoContacto}\n                    errorText={enviado && formik.errors.tipoContacto}\n                />\n                <RadioSeleccion title=\"Tipo de cliente\"\n                    options={[\n                        ['Habitual', 'Habitual'],\n                        ['Dejo de Comprar', 'Dejo de Comprar'],\n                        ['En gestion de compra', 'En gestion de compra'],\n                        ['Casual', 'Casual'],\n                    ]}\n                    name=\"tipoCliente\"\n                    value={formik.values.tipoCliente}\n                    onChange={formik.handleChange}\n                    error={enviado && formik.errors.tipoCliente}\n                    errorText={enviado && formik.errors.tipoCliente}\n                />\n                <RadioSeleccion title=\"¿Porqué dejó de comprar?\"\n                    options={[\n                        ['Precio', 'Precio'],\n                        ['Producto Faltante', 'Producto Faltante'],\n                    ]}\n                    name=\"motDejoComprar\"\n                    value={formik.values.motDejoComprar}\n                    onChange={formik.handleChange}\n                />\n                <RadioSeleccion title=\"¿Cerraste una venta?\"\n                    options={[\n                        ['Si', 'Si'],\n                        ['No', 'No'],\n                        ['Cotizacion', 'Cotizacion'],\n                    ]}\n                    name=\"cerrasteVenta\"\n                    value={formik.values.cerrasteVenta}\n                    onChange={formik.handleChange}\n                    error={enviado && formik.errors.cerrasteVenta}\n                    errorText={enviado && formik.errors.cerrasteVenta}\n                />\n                <RadioSeleccion title=\"¿Compró algún producto de la competencia?\"\n                    options={[\n                        ['Cintas', 'Cintas'],\n                        ['FILM', 'FILM'],\n                        ['FLEJES', 'FLEJES'],\n                        ['POF', 'POF'],\n                    ]}\n                    renderOther={true}\n                    otherName=\"otherComproProducto\"\n                    otherValue={formik.values.otherComproProducto}\n                    otherError={enviado && formik.errors.otherComproProducto}\n                    name=\"comproProducto\"\n                    value={formik.values.comproProducto}\n                    onChange={formik.handleChange}\n                />\n                <RadioSeleccion title=\"¿De quién compra?\"\n                    options={[\n                        ['Cintas S.A.', 'Cintas S.A.'],\n                        ['FONDO ESTRELLA S.A.', 'FONDO ESTRELLA S.A.'],\n                        ['PARPACK S.A', 'PARPACK S.A.'],\n                    ]}\n                    renderOther={true}\n                    otherName=\"otherQuienCompra\"\n                    otherValue={formik.values.otherQuienCompra}\n                    otherError={enviado && formik.errors.otherQuienCompra}\n                    name=\"quienCompra\"\n                    value={formik.values.quienCompra}\n                    onChange={formik.handleChange}\n                />\n                <CampoTexto\n                    title=\"Detalle del producto de la competencia\"\n                    name=\"detProducto\"\n                    value={formik.values.detProducto}\n                    onChange={formik.handleChange}\n                />\n                <RadioSeleccion title=\"¿Conseguiste una muestra?\"\n                    options={[\n                        ['Si', 'Si'],\n                        ['No', 'No'],\n                    ]}\n                    name=\"muestra\"\n                    value={formik.values.muestra}\n                    onChange={formik.handleChange}\n                />\n                <CampoTexto\n                    title=\"Comentarios\"\n                    name=\"comentarios\"\n                    value={formik.values.comentarios}\n                    onChange={formik.handleChange}\n                />\n                <Grid component={Box} padding={1}>\n\n                    <Button\n                        type=\"submit\"\n                        color=\"primary\"\n                        variant=\"contained\"\n                        onClick={\n                            () => setEnviado(true)\n                        }>\n                        Enviar\n                    </Button>\n                </Grid>\n            </Grid>\n\n            <Snackbar open={message} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"success\">\n                    Tu formulario ha sido enviado!\n                </Alert>\n            </Snackbar>\n        </form>\n    )\n}\n\nexport default Formulario\n\n","import React from 'react'\nimport {\n    AppBar,\n    Box,\n    Button,\n    IconButton,\n    makeStyles,\n    Toolbar,\n    Typography\n} from \"@material-ui/core\";\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport Cookies from 'universal-cookie';\nimport { Link, useHistory } from 'react-router-dom';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        background: '#000',\n    },\n    title: {\n        flexGrow: 1,\n    },\n}))\n\nconst Navegacion = (props) => {\n    const classes = useStyles()\n    const history = useHistory()\n    const cookies = new Cookies()\n\n    const handleClick = () => {\n        cookies.remove('usuario')\n        history.push('/login')\n    }\n\n    return (<>\n        <Box marginBottom={7}>\n            <AppBar className={classes.root} position=\"fixed\">\n                <Toolbar>\n                    {(() => {\n                        if (props.back) {\n                            return (\n                                <IconButton\n                                    component={Link} to={props.back}\n                                >\n                                    <ArrowBackIcon/>\n                                </IconButton>\n                            )\n                        }\n                    })()}\n                    <Typography className={classes.title} variant=\"h6\">\n                        {props.title}\n                    </Typography>\n                    {props.children}\n                    <Button\n                        onClick={handleClick}\n                        endIcon={<ExitToAppIcon />}>{\n                            cookies.get('usuario')\n                                ? cookies.get('usuario').usuario : ''\n                    }</Button>\n                </Toolbar>\n            </AppBar>\n        </Box>\n    </>)\n}\n\nexport default Navegacion\n","import Formulario from './Components/Formulario';\nimport { useEffect, useState } from 'react';\nimport Cookies from 'universal-cookie';\nimport { Link, useHistory } from 'react-router-dom';\nimport { Box, IconButton } from '@material-ui/core';\nimport Navegacion from '../Navegacion';\nimport HistoryIcon from '@material-ui/icons/History'\n\nconst FormView = () => {\n    const [clientes, setClientes] = useState([])\n    const history = useHistory();\n\n    useEffect(() => {\n        const cookies = new Cookies();\n        if (!cookies.get('usuario')) {\n            history.push('/login')\n        } else {\n            history.push('/')\n        }\n        fetch('/api/session/', {\n            method: 'POST',\n            body: JSON.stringify(\n                cookies.get('usuario'),\n            ),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }).then(response => {\n            if (response.ok) {\n                return response.json()\n            }\n        }).then(data => {\n            setClientes(data.clientes)\n        })\n    }, [history])\n\n    return(<>\n        <Navegacion title=\"Formulario\">\n            <IconButton component={Link} to='/test'>\n                <HistoryIcon />\n            </IconButton>\n        </Navegacion>\n        <Box marginBottom={3}>\n            <Formulario clientes={clientes}/>\n        </Box>\n    </>);\n}\n\nexport default FormView","import React, { useState } from 'react'\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport Cookies from 'universal-cookie';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router\";\nimport Caja from './Templates/Caja';\nimport { FormHelperText, Snackbar } from '@material-ui/core';\nimport { Collapse } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        background: '#000',\n    },\n\n    title: {\n        flexGrow: 1,\n    },\n\n    divs: {\n        margin: \"auto\",\n    }\n\n}));\n\nconst Login = () => {\n    const classes = useStyles();\n    const cookies = new Cookies()\n    const history = useHistory();\n    const [logged, setLogged] = useState(false)\n    const [open, setOpen] = useState(false)\n    const [message, setMessage] = useState('')\n    const [severity] = useState('error')\n    const [backdrop, setBackdrop] = useState(false)\n\n    const handleClose = (e, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        setOpen(false)\n    }\n\n    const formik = useFormik({\n        initialValues: {\n            usuario: '',\n            contrasenia: '',\n        },\n        onSubmit: value => {\n            setBackdrop(true)\n            fetch('/api/usuariovalidacion/', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    usuario: value.usuario,\n                    contrasenia: value.contrasenia,\n                })\n            }).then(response => {\n                setBackdrop(false)\n                if (response.ok){\n                    return response.json()\n                } else if (response.status === 405) {\n                    setMessage('Contraseña o usuario incorrectos')\n                    setOpen(true)\n                    return false\n                } else {\n                    setMessage('No se ha podido conectar con el servidor')\n                    return false\n                }\n            }).then(data => {\n                if (data) {\n                    cookies.set('usuario', data, {path: '/'})\n                    history.push('/')\n                }\n            }).catch(e => {\n                if (e.name === 'TypeError') {\n                    setBackdrop(false)\n                    setMessage('No se pudo contactar con el servidor para validar el inicio de sesión')\n                    setOpen(true)\n                }\n            })\n        },\n        validationSchema: Yup.object({\n            usuario: Yup.string().required('Ingrese usuario'),\n            contrasenia: Yup.string().required('Ingrese contraseña')\n        })\n    })\n    return (<>\n        <AppBar className={classes.root} position=\"static\">\n            <Toolbar>\n                <Typography className={classes.title} variant=\"h6\" noWrap>\n                    Contacto Clientes\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        <Backdrop\n            open={backdrop}\n            style={{zIndex: 200}}\n            transitionDuration={{enter: 1500}}>\n            <CircularProgress color=\"primary\" />\n        </Backdrop>\n        <Snackbar open={open} autoHideDuration={5000} onClose={handleClose}>\n            <MuiAlert elevation={6} variant=\"filled\" severity={severity}>\n                {message}\n            </MuiAlert>\n        </Snackbar>\n        <form onSubmit={formik.handleSubmit}>\n            <Grid container component={Box} padding={1}>\n                <Caja title=\"Iniciar sesión\">\n                    <Grid\n                        container\n                        component={FormControl}\n                        spacing={2}>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                name=\"usuario\"\n                                variant=\"outlined\"\n                                label=\"Usuario\"\n                                error={logged && formik.errors.usuario}\n                                fullWidth\n                                onChange={formik.handleChange}\n                            />\n                            <Collapse in={logged && formik.errors.usuario}>\n                                <FormHelperText error>{formik.errors.usuario}</FormHelperText>\n                            </Collapse>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <TextField\n                                name=\"contrasenia\"\n                                variant=\"outlined\"\n                                label=\"Contraseña\"\n                                type=\"password\"\n                                error={logged && formik.errors.contrasenia}\n                                fullWidth\n                                onChange={formik.handleChange}\n                            />\n                            <Collapse in={logged && formik.errors.contrasenia}>\n                                <FormHelperText error>{formik.errors.contrasenia}</FormHelperText>\n                            </Collapse>\n                        </Grid>\n                        <Grid item\n                            alignItems=\"center\"\n                            justify=\"center\"\n                            xs={12}>\n                                <Button variant=\"contained\"\n                                        type=\"submit\"\n                                        color=\"primary\"\n                                        className={classes.margin}\n                                        onClick={() => {setLogged(true)}}>\n                                    Acceder\n                                </Button>\n                        </Grid>\n                    </Grid>\n                </Caja>\n            </Grid>\n        </form>\n    </>)\n}\nexport default Login","import React from 'react'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n    MuiPickersUtilsProvider,\n    DatePicker,\n  } from '@material-ui/pickers'\n\nconst CampoFecha = (props) => {\n    return (<>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n            <DatePicker\n                inputVariant=\"outlined\"\n                label={props.title}\n                format=\"dd/MM/yyyy\"\n                {...props}\n            />\n        </MuiPickersUtilsProvider>\n    </>)\n}\n\nexport default CampoFecha","import { Grid, Table, TableBody, TableCell, TableContainer, TableHead } from '@material-ui/core'\nimport React from 'react'\n\nconst Tabla = (props) => {\n    return (\n        <TableContainer>\n            <Table>\n                <TableHead>\n                    <TableCell colSpan={props.items.length}>\n                        <Grid container\n                            direction=\"row\"\n                            alignItems=\"center\">\n                            {props.titulo}\n                        </Grid>\n                    </TableCell>\n                </TableHead>\n                <TableHead>\n                    {props.items.map(item => {\n                        return (\n                            <TableCell align={item[1]}>\n                                {item[0]}\n                            </TableCell>\n                        )\n                    })}\n                </TableHead>\n                <TableBody>{props.children}</TableBody>\n            </Table>\n        </TableContainer>\n    )\n}\n\nexport default Tabla","import {\n    Collapse,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    ListSubheader,\n    TableCell,\n    TableRow\n} from '@material-ui/core'\nimport React, { useState } from 'react'\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp'\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown'\nconst ItemDesp = (props) => {\n    const [open, setOpen] = useState(false)\n    const titulos = [\n        ['contact', '¿Por qué medio contactaste?'],\n        ['client_type', 'Tipo de cliente'],\n        ['stop_selling', '¿Porqué dejó de comprar?'],\n        ['closed_sells', '¿Cerraste una venta?'],\n        ['competition', 'Compró algún producto de la competencia?'],\n        ['seller_name', '¿De quién compra?'],\n        ['product_details', 'Detalle del producto de la competencia'],\n        ['sample', '¿Conseguiste una muestra?'],\n        ['comment', 'Comentarios']\n    ]\n\n    return (<>\n        <TableRow>\n            <TableCell>\n                <IconButton onClick={() => setOpen(!open)}>{\n                    open ?\n                    <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />\n                }</IconButton>\n            </TableCell>\n            <TableCell>{props.item.cliente}</TableCell>\n            <TableCell align=\"right\">{props.item.fecha}</TableCell>\n        </TableRow>\n        <TableRow>\n            <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={4}>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <List\n                        aria-labelledby=\"subheader\"\n                        subheader={\n                            <ListSubheader id=\"subheader\">\n                                Respuestas\n                            </ListSubheader>\n                        }\n                    >\n                        {props.item.respuestas.map(respuesta => {\n                            return (titulos.map(titulo => {\n                                return (<>\n                                    <ListItem key={titulos.indexOf(titulo)}>\n                                        <ListItemText\n                                            primary={titulo[1]}\n                                            secondary={respuesta[titulo[0]]}\n                                        />\n                                    </ListItem>\n                                </>)\n                            }))\n                        })}\n                    </List>\n                </Collapse>\n            </TableCell>\n        </TableRow>\n    </>)\n}\n\nexport default ItemDesp","import { Box, Button, Divider, Grid } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport Navegacion from './Navegacion'\nimport Caja from './Templates/Caja'\nimport DateRangeIcon from '@material-ui/icons/DateRange'\nimport CampoFecha from './Templates/CampoFecha'\nimport { useFormik } from 'formik'\nimport Tabla from './Templates/Tabla'\nimport HistoryIcon from '@material-ui/icons/History'\nimport ItemDesp from './Templates/ItemDesp'\nimport Cookies from 'universal-cookie'\n\nconst ListaEnviados = () => {\n    const cookies = new Cookies()\n    const [items, setItems] = useState([])\n\n    const formik = useFormik({\n        initialValues: {\n            desde: new Date(),\n            hasta: new Date()\n        },\n        onSubmit: (res) => {\n            res.desde.setHours(0, 0)\n            res.hasta.setHours(23, 59)\n            fetch('api/historial/', {\n                method: 'POST',\n                body: JSON.stringify({\n                    usuario: cookies.get('usuario').usuario,\n                    fecha_min: res.desde.toUTCString(),\n                    fecha_max: res.hasta.toUTCString()\n                }),\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            }).then(response => {\n                if (response.ok) {\n                    return response.json()\n                }\n            }).then(data => {\n                let items = []\n                console.log(data.resultado)\n                data.resultado.forEach(item => {\n                    items.push({\n                        fecha: item.fecha,\n                        cliente: item.id_cliente,\n                        respuestas: [{\n                            company: item.company,\n                            salesman_name: item.salesman_name,\n                            contact: item.contact,\n                            client_type: item.client_type,\n                            closed_sells: item.closed_sells,\n                            stop_selling: item.stop_selling,\n                            order: item.order,\n                            competition: item.competition,\n                            seller_name: item.seller_name,\n                            product_details: item.product_details,\n                            sample: item.sample,\n                            comment: item.comment,\n                        }]\n                    })\n                })\n                setItems(items)\n            })\n        }\n    })\n\n\n    return (<>\n        <Navegacion back=\"/\" title=\"Gestiones realizadas\" />\n        <Grid container component={Box} padding={1}>\n            <Caja title=\"Rango\" icon={DateRangeIcon}>\n                <Grid container spacing={2}>\n                    <Grid item xs={12}>\n                        <form onSubmit={formik.handleSubmit}>\n                            <Grid container spacing={2}>\n                                <Grid item>\n                                    <CampoFecha\n                                        title=\"Desde\"\n                                        value={formik.values.desde}\n                                        disableFuture\n                                        onChange={date =>{\n                                                formik.setFieldValue('desde', date)\n                                            }\n                                        }\n                                    />\n                                </Grid>\n                                <Grid item>\n                                    <CampoFecha\n                                        title=\"Hasta\"\n                                        value={formik.values.hasta}\n                                        disableFuture\n                                        onChange={date =>\n                                            formik.setFieldValue('hasta', date)\n                                        }/>\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <Button color=\"primary\" variant=\"contained\" type=\"submite\">\n                                        aceptar\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </form>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Divider/>\n                        <Tabla\n                            titulo={<>\n                                <HistoryIcon /> &nbsp;\n                                <h2>Historia</h2>\n                            </>}\n                            items={[\n                                ['Desplegar', 'left'],\n                                ['cliente', 'left'],\n                                ['fecha', 'right']\n                            ]}>{items.map(item => {\n                                return (\n                                    <ItemDesp item={item}/>\n                                )\n                            })\n                        }</Tabla>\n                    </Grid>\n                </Grid>\n            </Caja>\n        </Grid>\n    </>)\n}\n\nexport default ListaEnviados","// import Cookies from 'universal-cookie';\n// import './App.css';\nimport FormView from \"./Components/Formulario/index.js\"\nimport Login from './Components/Login'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider, createTheme } from '@material-ui/core/styles';\nimport { red } from \"@material-ui/core/colors\";\nimport ListaEnviados from \"./Components/ListaEnviados.js\";\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n        secondary: red\n    },\n})\n\nfunction App() {\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <Router>\n                <Switch>\n                    <Route path=\"/login\">\n                        <Login />\n                    </Route>\n                    <Route path=\"/test\">\n                        <ListaEnviados />\n                    </Route>\n                    <Route path=\"/\">\n                        <FormView />\n                    </Route>\n                </Switch>\n            </Router>\n        </ThemeProvider>\n    );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}